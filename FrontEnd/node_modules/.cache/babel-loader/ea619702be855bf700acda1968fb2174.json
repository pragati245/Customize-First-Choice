{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.pprice * item.quantity + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.pid === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn('Cant remove this product(id: ${action.id})as its not in basket!');\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"REMOVE_ITEM\":\n      {\n        return Object.assign({}, state, {\n          items: [...state.items.filter(item => item.id !== action.pid)]\n        });\n      }\n      ;\n\n    case \"ADD_QUANTITY\":\n      console.log(\"ADD_QUANTITY\");\n      let Items = [...state.basket];\n      Items.filter(item => Number(item.pid) === Number(action.id)).map(i => {\n        if (i.p_qty >= i.quantity + 1) {\n          console.log(i.quantity);\n          i.quantity = i.quantity + 1;\n        }\n      });\n      return Object.assign({}, state, {\n        basketItem: Items\n      });\n\n    case \"MINUS_QUANTITY\":\n      console.log(\"MINUS_QUANTITY\");\n      let BasketItems = [...state.basket];\n      BasketItems.filter(item => Number(item.pid) === Number(action.id)).map(i => {\n        console.log(i.quantity);\n\n        if (i.quantity === 1) {\n          BasketItems = [...state.basket.filter(item => Number(item.pid) !== Number(action.id))];\n        } else {\n          i.quantity = i.quantity - 1;\n        }\n      });\n      return Object.assign({}, state, {\n        basketItem: BasketItems\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/PRAGATI/Customize-First Choice/FrontEnd/src/components/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","pprice","quantity","reducer","state","action","type","index","findIndex","basketItem","pid","id","newBasket","splice","console","warn","Object","assign","items","filter","log","Items","Number","map","i","p_qty","BasketItems"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    basket: []\r\n};\r\nexport const getBasketTotal = (basket) => basket?.reduce((amount, item) => (((item.pprice)*item.quantity) + amount), 0);\r\n\r\nconst reducer =  (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n            const index = state.basket.findIndex((basketItem) => basketItem.pid === action.id);\r\n            let newBasket = [...state.basket];\r\n            if (index >= 0) {\r\n                newBasket.splice(index, 1);\r\n            }\r\n            else {\r\n                console.warn('Cant remove this product(id: ${action.id})as its not in basket!')\r\n            }\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            };\r\n        case \"REMOVE_ITEM\": {\r\n            return Object.assign({}, state, {\r\n                items: [...state.items.filter(item => item.id !== action.pid)],\r\n            });\r\n        };\r\n        case \"ADD_QUANTITY\":\r\n            console.log(\"ADD_QUANTITY\")\r\n            let Items = [...state.basket]\r\n             Items.filter(item => Number(item.pid) === Number(action.id)).map( i => {\r\n                if(i.p_qty>=(i.quantity + 1)){\r\n                    console.log(i.quantity)\r\n                    i.quantity = i.quantity + 1\r\n                }  \r\n            })\r\n            return Object.assign({}, state, {\r\n                basketItem: Items,\r\n            });\r\n        case \"MINUS_QUANTITY\":\r\n            console.log(\"MINUS_QUANTITY\")\r\n            let BasketItems = [...state.basket]\r\n            BasketItems.filter(item => Number(item.pid) === Number(action.id)).map(i => {\r\n                console.log(i.quantity)\r\n                if (i.quantity === 1) {\r\n                    BasketItems = [...state.basket.filter(item => Number(item.pid) !== Number(action.id))]\r\n                }\r\n                else {\r\n                    i.quantity = i.quantity - 1\r\n                }\r\n            })\r\n            return Object.assign({}, state, {\r\n                basketItem: BasketItems,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}