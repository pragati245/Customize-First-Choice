{"ast":null,"code":"var _jsxFileName = \"C:\\\\PRAGATI\\\\Sapians\\\\FrontEnd\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../Login.css';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport { Form } from \"react-bootstrap\";\nimport Logo from '../assets/img/Logo.png';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginIn() {\n  _s();\n\n  const history = useNavigate();\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: ''\n  });\n  const [isError, setIsError] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [isCheckTerms, setIsCheckTerms] = useState(false);\n  const [inputElements, setInputElements] = useState({\n    email: {\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false,\n      invalidText: \"Invalid Email\"\n    },\n    password: {\n      validation: {\n        required: true,\n        minLength: 1\n      },\n      valid: false,\n      touched: false,\n      invalidText: \"Please enter password\"\n    }\n  });\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  useEffect(() => {\n    let formIsValid = true;\n\n    for (let inputIdentifier in inputElements) {\n      formIsValid = inputElements[inputIdentifier].valid && formIsValid;\n    }\n\n    setIsFormValid(formIsValid);\n  }, [inputs]);\n  const {\n    email,\n    password\n  } = inputs;\n\n  async function handleChange(e) {\n    e.stopPropagation();\n    setIsError(false);\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n\n    if (checkValidity(e.target.value, inputElements[e.target.name].validation)) {\n      setInputElements({ ...inputElements,\n        [e.target.name]: { ...inputElements[e.target.name],\n          touched: true,\n          valid: true\n        }\n      });\n    } else {\n      setInputElements({ ...inputElements,\n        [e.target.name]: { ...inputElements[e.target.name],\n          touched: true,\n          valid: false\n        }\n      });\n    }\n  }\n\n  const signIn = async e => {\n    setIsError(false);\n    e.preventDefault();\n    const reqData = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        u_email: email,\n        u_password: password\n      })\n    };\n    const url = process.env.REACT_APP_BASE_URL + \"/user/loginuser\";\n    await fetch(url, reqData).then(response => response.json()).then(data => {\n      if (data) {\n        localStorage.setItem('data1', JSON.stringify(data));\n        history('/');\n      } else {\n        alert(\"Wrong ID/Password\");\n        history('/login');\n      }\n    }).catch(error => {\n      setIsError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"login_img\",\n        src: Logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Sign-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            name: \"email\",\n            value: email,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), !inputElements.email.valid && inputElements.email.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: [\" \", inputElements.email.invalidText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 89\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            name: \"password\",\n            value: password,\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"By signing in you will agree all the terms & condition by FIRST CHOICE\",\n            onChange: () => setIsCheckTerms(!isCheckTerms)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), isError && /*#__PURE__*/_jsxDEV(Form.Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"Incorrect Email and Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !(isFormValid && isCheckTerms),\n          className: isFormValid && isCheckTerms ? 'innerbutton' : \"inactivebtn\",\n          type: \"submit\",\n          onClick: e => signIn(e),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 202\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"innerbutton\",\n          children: \" Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vendorlogin\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"innerbutton mt-3\",\n          children: \" Vendor Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/adminlogin\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"innerbutton mt-3\",\n          children: \" Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginIn, \"N+AmVFKnLThMIN30+AMT7JBEqr4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginIn;\nexport default LoginIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginIn\");","map":{"version":3,"sources":["C:/PRAGATI/Sapians/FrontEnd/src/components/Login.js"],"names":["React","useState","useEffect","HomeIcon","Link","Form","Logo","useNavigate","LoginIn","history","inputs","setInputs","email","password","isError","setIsError","isFormValid","setIsFormValid","isCheckTerms","setIsCheckTerms","inputElements","setInputElements","validation","required","isEmail","valid","touched","invalidText","minLength","checkValidity","value","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","formIsValid","inputIdentifier","handleChange","e","stopPropagation","name","target","signIn","preventDefault","reqData","method","headers","body","JSON","stringify","u_email","u_password","url","process","env","REACT_APP_BASE_URL","fetch","then","response","json","data","localStorage","setItem","alert","catch","error","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Login.css';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from \"react-bootstrap\";\r\nimport Logo from '../assets/img/Logo.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginIn() {\r\n    const history = useNavigate();\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [isError, setIsError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isCheckTerms, setIsCheckTerms] = useState(false);\r\n    const [inputElements, setInputElements] = useState({\r\n        email: {\r\n            validation: {\r\n                required: true,\r\n                isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            invalidText: \"Invalid Email\",\r\n        },\r\n        password: {\r\n            validation: {\r\n                required: true,\r\n                minLength: 1\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n            invalidText: \"Please enter password\",\r\n        },\r\n    });\r\n    const checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== \"\" && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern =\r\n                /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    useEffect(() => {\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in inputElements) {\r\n            formIsValid = inputElements[inputIdentifier].valid && formIsValid;\r\n        }\r\n        setIsFormValid(formIsValid)\r\n    },[inputs])\r\n    const { email, password } = inputs;\r\n    async function handleChange  (e) {\r\n        e.stopPropagation()\r\n        setIsError(false)\r\n        const { name, value } = e.target;\r\n        setInputs(inputs => ({ ...inputs, [name]: value }));\r\n        if (checkValidity(e.target.value, inputElements[e.target.name].validation)) {\r\n             setInputElements({ ...inputElements, [e.target.name]: { ...inputElements[e.target.name], touched: true, valid: true } })\r\n        }\r\n        else {\r\n             setInputElements({ ...inputElements, [e.target.name]: { ...inputElements[e.target.name], touched: true, valid: false } })\r\n        }\r\n        \r\n    }\r\n    const signIn = async (e) => {\r\n        setIsError(false)\r\n        e.preventDefault();\r\n        const reqData = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                u_email: email,\r\n                u_password: password,\r\n            })\r\n        };\r\n        const url = process.env.REACT_APP_BASE_URL + \"/user/loginuser\";\r\n\r\n        await fetch(url, reqData)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data) {\r\n                    localStorage.setItem('data1', JSON.stringify(data));\r\n                    history('/')\r\n                }\r\n                else {\r\n                    alert(\"Wrong ID/Password\");\r\n                    history('/login')\r\n                }\r\n            }).catch((error) => {\r\n                setIsError(true)\r\n            })\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <Link to=\"/\">\r\n                {/* <HomeIcon className='login_homeIcon' /> */}\r\n                <img className='login_img' src={Logo} alt='logo' />\r\n            </Link>\r\n            <div className='login_container'>\r\n                <h1>User Sign-in</h1>\r\n                <form>\r\n                    {/* <h5>Email</h5>\r\n                    <input type='text' name=\"email\" value={email} onChange={handleChange} />\r\n                    <h5>Password</h5>\r\n                    <input type='password' name=\"password\" value={password} onChange={handleChange} /><br /> */}\r\n                    <Form.Group className=\"mb-\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={email}\r\n                            onChange={(e) => handleChange(e)}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                        {(!inputElements.email.valid && inputElements.email.touched) && <div style={{ color: \"red\" }}> {inputElements.email.invalidText}</div>}\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" name=\"password\" value={password}\r\n                            onChange={(e) => handleChange(e)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"By signing in you will agree all the terms & condition by FIRST CHOICE\" onChange={() => setIsCheckTerms(!isCheckTerms)} />\r\n                    </Form.Group>\r\n                    {isError &&\r\n                        <Form.Text style={{ color: 'red' }}>\r\n                            Incorrect Email and Password\r\n                        </Form.Text>\r\n                    }\r\n                    <button disabled={!(isFormValid && isCheckTerms)} className={(isFormValid && isCheckTerms) ? 'innerbutton' : \"inactivebtn\"} type=\"submit\" onClick={(e) => signIn(e)}>Sign In</button><br />\r\n\r\n                </form><br />\r\n                {/* <Link to=\"/forgetpass\"><p style={{ textAlign: 'center' }}>Forget Password</p></Link> */}\r\n\r\n                <Link to=\"/register\" ><button className='innerbutton'> Create Account</button></Link>\r\n                <Link to=\"/vendorlogin\" ><button className='innerbutton mt-3'> Vendor Login</button></Link>\r\n                <Link to=\"/adminlogin\" ><button className='innerbutton mt-3'> Admin Login</button></Link>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default LoginIn;\r\n"]},"metadata":{},"sourceType":"module"}